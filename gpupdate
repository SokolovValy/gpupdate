#! /usr/bin/env python3

import argparse

import subprocess
import threading

import os
import errno

import tempfile
import shutil

import socket
import sys
import re

class gpoa:
    _gpoa_exe = '/usr/sbin/gpoa'

    def __init__(self, username):
        self._user = username

    def run(self):
        '''
        Call gpoa utility to generate scripts
        '''
        gpoa_cmd = [self._gpoa_exe]
        if self._user:
            gpoa_cmd += [self._user]

        print('Running gpoa')
        output = subprocess.call(gpoa_cmd)
        sys.exit(output)

class dbus:
    _bus_name = 'com.redhat.oddjob_gpupdate'
    _object_path = '/'

    def __init__(self):
        from pydbus import SystemBus
        bus = SystemBus()
        self._object = bus.get(self._bus_name, self._object_path)

    def run(self):
        self._object.gpupdate()


def parse_cli_arguments():
    '''
    Command line argument parser
    '''
    argparser = argparse.ArgumentParser(description='Update group policies for the specified user')
    argparser.add_argument('-u',
        '--user',
        default=None,
        help='Name of the user for GPO update')

    return argparser.parse_args()

def main():
    args = parse_cli_arguments()

    if os.geteuid() == 0:
        gpo_applier = gpoa(args.user)
    else:
        gpo_applier = dbus();

    gpo_applier.run()

if __name__ == '__main__':
    main()

